{"version":3,"sources":["firebase/config.js","firebase/services.js","components/Login/index.js","components/ChatRoom/NavBar.js","Context/AuthProvider.js","components/ChatRoom/UserInfo.js","hooks/useFirestore.js","Context/AppProvider.js","components/ChatRoom/RoomList.js","components/ChatRoom/SideBar.js","components/ChatRoom/Message.js","components/ChatRoom/ChatForm.js","components/ChatRoom/RoomInfo.js","components/ChatRoom/index.js","components/Modals/AddRoomModal.js","components/Modals/InviteMemberModal.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","analytics","auth","db","firestore","storage","addDocument","collection","data","add","createdAt","FieldValue","serverTimestamp","generateKeywords","displayName","name","split","filter","word","length","flagArray","result","stringArray","i","findPermutation","k","push","join","keywords","reduce","acc","cur","words","arrName","curName","forEach","letter","createKeywords","facebookProvider","Typography","Title","FacebookAuthProvider","googleProvider","GoogleAuthProvider","Login","handleGoogleLogin","a","signInWithPopup","additionalUserInfo","user","isNewUser","email","photoURL","uid","providerId","toLowerCase","handleFbLogin","id","className","onClick","GoogleOutlined","FacebookOutlined","DropDownListContainer","styled","NavBar","style","height","width","marginTop","type","size","icon","MessageOutlined","ContactsOutlined","BellOutlined","CheckSquareOutlined","CloudOutlined","StarOutlined","SettingOutlined","AuthContext","React","createContext","AuthProvider","children","useState","setUser","history","useHistory","isLoading","setIsLoading","useEffect","unsubscribed","onAuthStateChanged","Provider","value","position","inset","WrapperStyled","div","UserInfo","useContext","src","charAt","toUperCase","Text","ghost","LogoutOutlined","signOut","useFirestore","condition","documents","setDocuments","collectionRef","orderBy","compareValue","where","fieldName","operator","unsubscribe","onSnapshot","snapshot","docs","map","doc","AppContext","AppProvider","isAddRoomVisible","setIsAddRoomVisible","isInviteMemberVisible","setIsInviteMemberVisible","selectedRoomId","setSelectedRoomId","isAddFriendVisible","setIsAddFriendVisible","isSearchRoomVisible","setIsSearchRoomVisible","roomsCondition","useMemo","rooms","selectedRoom","find","room","usersCondition","members","Panel","Collapse","FormStyled","Form","PanelStyled","ButtonStyled","Button","ButtonAddFriendStyled","LinkStyled","Link","RoomList","filteredData","setFilteredData","wordEntered","setWordEntered","defaultActiveKey","SearchOutlined","CloseOutlined","placeholder","onChange","event","searchWord","target","newFilter","includes","bordered","autoComplete","slice","key","UserAddOutlined","UsergroupAddOutlined","header","index","SidebarStyled","SideBar","span","formatDate","seconds","formattedDate","formatRelative","Date","toUpperCase","Message","text","charArt","marginLeft","HeaderStyled","ButtonGroupStyled","ContentStyled","MessageListStyled","slideImages","url","caption","ChatForm","inputValue","setInputValue","useForm","form","imageUpload","setImage","setUrl","setProgress","hanldeUploadImage","ref","put","on","progress","Math","round","bytesTransferred","totalBytes","error","console","log","child","getDownloadURL","then","roomId","setTimeout","resetFields","handleOnSubmit","messages","description","PhoneOutlined","VideoCameraAddOutlined","Group","maxCount","member","title","mes","Item","e","files","onPressEnter","display","accept","UploadOutlined","SendOutlined","slideImage","DropDownContainer","DropDownHeader","DropDownList","InforRoom","isOpenGroupMember","setIsOpenGroupMember","isOpenGroupPhotosVideos","setisOpenGroupPhotosVideos","isOpenFiles","setisOpenGroupFiles","isOpenLinks","setisOpenGroupLinks","isOpenSetting","setIsOpenSetting","UserOutlined","message","filteredImage","marginRight","padding","FileWordOutlined","FileExcelOutlined","LinkOutlined","EyeInvisibleOutlined","DeleteOutlined","RightSquareOutlined","LoadingOutlined","margin","ChatRoom","AddRoomModal","visible","onOk","formData","getFieldValue","getFieldsValue","onCancel","layout","label","TextArea","DebounceSelect","fetchOptions","debounceTimeout","currentMembers","props","fetching","setFetching","options","setOptions","debounceFetcher","debounce","newOptions","labelInValue","filterOption","onSearch","notFoundContent","opt","Option","fetchUserList","search","limit","get","InviteMemberModal","setValue","update","val","destroyOnClose","mode","newValue","App","component","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.b62de363.chunk.js","sourcesContent":["import firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\nimport 'firebase/compat/firestore';\r\nimport 'firebase/compat/analytics';\r\nimport 'firebase/compat/storage';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyA6VeCRWQw-gLjpoHd-Ez6kjna1mdCg9KE\",\r\n    authDomain: \"chat-app-ca1eb.firebaseapp.com\",\r\n    projectId: \"chat-app-ca1eb\",\r\n    storageBucket: \"chat-app-ca1eb.appspot.com\",\r\n    messagingSenderId: \"175533772032\",\r\n    appId: \"1:175533772032:web:12bff5b7bf258c57d3f7e5\"\r\n  };\r\n  \r\n  // Initialize Firebase\r\n firebase.initializeApp(firebaseConfig);\r\n firebase.analytics();\r\n\r\n const auth = firebase.auth();\r\n const db = firebase.firestore();\r\n const storage = firebase.storage();\r\n\r\n\r\n export { db, auth, storage};\r\n export default firebase;\r\n\r\n ","import firebase, { db } from './config';\r\n\r\nexport const addDocument = (collection, data) => {\r\n  const query = db.collection(collection);\r\n\r\n  query.add({\r\n    ...data,\r\n    createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n  });\r\n};\r\n\r\n// tao keywords cho displayName, su dung cho search\r\nexport const generateKeywords = (displayName) => {\r\n  // liet ke tat cac hoan vi. vd: name = [\"David\", \"Van\", \"Teo\"]\r\n  // => [\"David\", \"Van\", \"Teo\"], [\"David\", \"Teo\", \"Van\"], [\"Teo\", \"David\", \"Van\"],...\r\n  const name = displayName.split(' ').filter((word) => word);\r\n\r\n  const length = name.length;\r\n  let flagArray = [];\r\n  let result = [];\r\n  let stringArray = [];\r\n\r\n  /**\r\n   * khoi tao mang flag false\r\n   * dung de danh dau xem gia tri\r\n   * tai vi tri nay da duoc su dung\r\n   * hay chua\r\n   **/\r\n  for (let i = 0; i < length; i++) {\r\n    flagArray[i] = false;\r\n  }\r\n\r\n  const createKeywords = (name) => {\r\n    const arrName = [];\r\n    let curName = '';\r\n    name.split('').forEach((letter) => {\r\n      curName += letter;\r\n      arrName.push(curName);\r\n    });\r\n    return arrName;\r\n  };\r\n\r\n  function findPermutation(k) {\r\n    for (let i = 0; i < length; i++) {\r\n      if (!flagArray[i]) {\r\n        flagArray[i] = true;\r\n        result[k] = name[i];\r\n\r\n        if (k === length - 1) {\r\n          stringArray.push(result.join(' '));\r\n        }\r\n\r\n        findPermutation(k + 1);\r\n        flagArray[i] = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  findPermutation(0);\r\n\r\n  const keywords = stringArray.reduce((acc, cur) => {\r\n    const words = createKeywords(cur);\r\n    return [...acc, ...words];\r\n  }, []);\r\n\r\n  return keywords;\r\n};","import React from 'react'\r\nimport { Typography } from 'antd';\r\nimport { GoogleOutlined, FacebookOutlined } from \"@ant-design/icons\";\r\nimport firebase, { auth } from '../../firebase/config';\r\nimport { addDocument, generateKeywords } from '../../firebase/services';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst facebookProvider = new firebase.auth.FacebookAuthProvider();\r\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport default function Login() {\r\n    //googleLogin\r\n    const handleGoogleLogin = async() => {\r\n        const { additionalUserInfo, user } = await auth.signInWithPopup(googleProvider);\r\n\r\n        if (additionalUserInfo?.isNewUser) {\r\n            addDocument('users', {\r\n                displayName: user.displayName,\r\n                email: user.email,\r\n                photoURL: user.photoURL,\r\n                uid: user.uid,\r\n                providerId: additionalUserInfo.providerId,\r\n                keywords: generateKeywords(user.displayName ?.toLowerCase()),\r\n            });\r\n        }\r\n    };\r\n    //fbLogin\r\n    const handleFbLogin = async() => {\r\n        const { additionalUserInfo, user } = await auth.signInWithPopup(facebookProvider);\r\n\r\n        if (additionalUserInfo?.isNewUser) {\r\n            addDocument('users', {\r\n                displayName: user.displayName,\r\n                email: user.email,\r\n                photoURL: user.photoURL,\r\n                uid: user.uid,\r\n                providerId: additionalUserInfo.providerId,\r\n                keywords: generateKeywords(user.displayName ?.toLowerCase()),\r\n            });\r\n        }\r\n    };\r\n\r\n    return ( \r\n        <div id=\"login-page\">\r\n            <div id=\"login-card\">\r\n                <h2>Chat Realtime Application</h2>\r\n                <div \r\n                    className=\"login-button google\"\r\n                    onClick={() => handleGoogleLogin(googleProvider)}\r\n                >\r\n                    <GoogleOutlined /> SIGN IN WITH GOOGLE\r\n                </div>\r\n            <br /> <br />\r\n                <div \r\n                    className=\"login-button facebook\"\r\n                    onClick={() => handleFbLogin(facebookProvider)}\r\n                >\r\n                    <FacebookOutlined /> SIGN IN WITH FACEBOOK\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport { Button } from 'antd';\r\nimport { MessageOutlined, ContactsOutlined, BellOutlined, CheckSquareOutlined, CloudOutlined, StarOutlined, SettingOutlined} from '@ant-design/icons';\r\n\r\n\r\nconst DropDownListContainer = styled(\"div\")`\r\n    height: 100vh;\r\n    background-color: rgb(0, 145, 255) !important;\r\n\r\n    button {\r\n        border-color: none;\r\n        color: white;\r\n        align-items: flex-start;\r\n        font-size: 30px !important;\r\n    }\r\n`;\r\n\r\nexport default function NavBar() {\r\n  return (\r\n      <DropDownListContainer>\r\n          <div className='nav-bar'>\r\n              <div className='nav-icon' >\r\n                <Button style={{ height: 50, width: 60, marginTop: 56 }}\r\n                    type='text'\r\n                    size='large'\r\n                    icon={<MessageOutlined />}\r\n                    >  \r\n                </Button>\r\n              </div>\r\n              <div className='nav-icon'>\r\n                <Button style={{ height: 50, width: 60, marginTop: 10 }}\r\n                    type='text'\r\n                    size='large'\r\n                    icon={<ContactsOutlined />}\r\n                    >  \r\n                </Button>\r\n              </div>\r\n              <div className='nav-icon'>\r\n                <Button style={{ height: 50, width: 60, marginTop: 10}}\r\n                    type='text'\r\n                    size='large'\r\n                    icon={<BellOutlined />}\r\n                    >  \r\n                </Button>\r\n              </div>\r\n              <div className='nav-icon'>\r\n                <Button style={{ height: 50, width: 60, marginTop: 10 }}\r\n                    type='text'\r\n                    size='large'\r\n                    icon={<CheckSquareOutlined />}\r\n                    >  \r\n                </Button>\r\n              </div>\r\n              <div className='nav-icon'>\r\n                <Button style={{ height: 50, width: 60, marginTop: 10 }}\r\n                    type='text'\r\n                    size='large'\r\n                    icon={<CloudOutlined />}\r\n                    >  \r\n                </Button>\r\n              </div>\r\n              <div className='nav-icon'>\r\n                <Button style={{ height: 50, width: 60, marginTop: 10 }}\r\n                    type='text'\r\n                    size='large'\r\n                    icon={<StarOutlined />}\r\n                    >  \r\n                </Button>\r\n              </div>\r\n              <div className='nav-icon'>\r\n                <Button style={{ height: 50, width: 60, marginTop: 10 }}\r\n                    type='text'\r\n                    size='large'\r\n                    icon={<SettingOutlined />}\r\n                    >  \r\n                </Button>\r\n              </div>\r\n          \r\n        </div>\r\n      </DropDownListContainer>\r\n    \r\n  )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { auth } from '../firebase/config';\r\nimport { Spin } from 'antd';\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport default function AuthProvider({ children }) {\r\n    const [user, setUser] = useState({});\r\n    //Login success -> direct to\r\n    const history = useHistory();\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    //useEffect will listen for Event login successful?\r\n    React.useEffect(() => {\r\n        const unsubscribed =  auth.onAuthStateChanged((user) => {\r\n            //console.log({ user });\r\n            if (user) {\r\n                const { displayName, email, uid, photoURL } = user;\r\n                setUser({\r\n                    displayName,\r\n                    email,\r\n                    uid,\r\n                    photoURL\r\n                });\r\n                setIsLoading(false);\r\n                history.push('/');\r\n                return;\r\n            }\r\n            // reset user info\r\n            setUser({});\r\n            setIsLoading(false);\r\n            history.push('/login');\r\n        });\r\n            //Clean function \r\n        return () => {\r\n            unsubscribed();\r\n        };\r\n    }, [history]);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user }}>\r\n        {isLoading ? <Spin style={{ position: 'fixed', inset: 0 }} /> : children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n","import { Avatar, Button, Typography } from 'antd'\r\nimport React, { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { auth, db } from '../../firebase/config';\r\nimport { AuthContext } from '../../Context/AuthProvider';\r\nimport { LogoutOutlined } from '@ant-design/icons';\r\n\r\nconst WrapperStyled = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 12px 16px;\r\n    border-bottom: 1px solid rgb(230,230,230);\r\n\r\n    .username {\r\n      font-weight: bold;\r\n      margin-left: 5px;\r\n    }\r\n    .button-logout {\r\n      //font-weight: bold;\r\n      color: black;\r\n      font-size: 15px;\r\n      border: none;\r\n    }\r\n`;\r\n\r\nexport default function UserInfo() {\r\n  // React.useEffect(() => {\r\n  //   db.collection('rooms').onSnapshot((snapshot) => {\r\n  //     const data = snapshot.docs.map(doc => ({\r\n  //       ...doc.data(),\r\n  //       id: doc.id,\r\n  //     }))\r\n\r\n  //     console.log({ data, snapshot, docs: snapshot.docs })\r\n  //   })\r\n  // }, [])\r\n\r\n  const { user: {\r\n    displayName,\r\n    photoURL\r\n  } } = React.useContext(AuthContext);\r\n  return (\r\n    <WrapperStyled>\r\n      <div>\r\n          <Avatar src={photoURL}>{photoURL ? '' : displayName?.charAt(0)?.toUperCase()}</Avatar>\r\n          <Typography.Text className='username'>{displayName}</Typography.Text>\r\n      </div>\r\n      <Button \r\n      className='button-logout'\r\n        ghost \r\n        icon={<LogoutOutlined />} \r\n        onClick={() => auth.signOut()} >Log out\r\n        </Button>\r\n      </WrapperStyled>\r\n  )\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { db } from '../firebase/config';\r\n\r\nconst useFirestore = (collection, condition) => {\r\n    const [documents, setDocuments] = useState([]);\r\n\r\n    React.useEffect(() => {\r\n    let collectionRef = db.collection(collection).orderBy('createdAt');\r\n    //condition\r\n    /**\r\n     * {\r\n     *      fieldName: 'Abc'.\r\n     *      operator: ===,\r\n     *      compareValue: 'Abccgg' (firestore is not accept compareValue are \"null or empty\"  ) =>Check\r\n     * }\r\n     * \r\n     */\r\n    if(condition) {\r\n        if(!condition.compareValue || !condition.compareValue.length){\r\n            // reset documents data\r\n            setDocuments([]);\r\n            return;\r\n        }\r\n        collectionRef = collectionRef.where(\r\n            condition.fieldName, \r\n            condition.operator, \r\n            condition.compareValue\r\n            );\r\n        }\r\n\r\n    const unsubscribe = collectionRef.onSnapshot((snapshot) => {\r\n        const documents = snapshot.docs.map((doc) => ({\r\n            ...doc.data(),\r\n            id: doc.id,\r\n        }));\r\n        \r\n        setDocuments(documents);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, [collection, condition]);\r\n\r\n  return documents;\r\n};\r\n\r\nexport default useFirestore;","import React, { useState } from 'react';\r\nimport useFirestore from '../hooks/useFirestore';\r\nimport { AuthContext } from './AuthProvider';\r\n\r\nexport const AppContext = React.createContext();\r\n\r\nexport default function AppProvider({ children }){\r\n    const [isAddRoomVisible, setIsAddRoomVisible] = useState(false);\r\n    const [isInviteMemberVisible, setIsInviteMemberVisible] = useState(false);\r\n    const [selectedRoomId, setSelectedRoomId] = useState('');\r\n    const [isAddFriendVisible, setIsAddFriendVisible] = useState(false);\r\n    const [isSearchRoomVisible, setIsSearchRoomVisible] = useState(false);\r\n\r\n    const {\r\n        user: { uid },\r\n      } = React.useContext(AuthContext);\r\n\r\n// create condition for rooms\r\n  const roomsCondition = React.useMemo(() => {\r\n    return {\r\n      fieldName: 'members',\r\n      operator: 'array-contains',\r\n      compareValue: uid,\r\n    };\r\n  }, [uid]);\r\n\r\n  const rooms = useFirestore('rooms', roomsCondition);\r\n\r\n  const selectedRoom = React.useMemo(\r\n    () => rooms.find((room) => room.id === selectedRoomId) || {},\r\n    [rooms, selectedRoomId]\r\n  );\r\n  // create condition for members\r\n  const usersCondition = React.useMemo(() => {\r\n    return {\r\n      fieldName: 'uid',\r\n      operator: 'in',\r\n      compareValue: selectedRoom.members,\r\n    };\r\n  }, [selectedRoom.members]);\r\n  const members = useFirestore('users', usersCondition);\r\n\r\n  return (\r\n    <AppContext.Provider \r\n    value={{ \r\n      rooms,\r\n      members,\r\n      selectedRoom,\r\n      isAddRoomVisible,\r\n      setIsAddRoomVisible,\r\n      selectedRoomId,\r\n      setSelectedRoomId,\r\n      isInviteMemberVisible,\r\n      setIsInviteMemberVisible,\r\n      isAddFriendVisible,\r\n      setIsAddFriendVisible,\r\n      isSearchRoomVisible,\r\n      setIsSearchRoomVisible,\r\n        }}>\r\n        {children}\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Button, Collapse, Typography,Input, Form} from 'antd';\r\nimport styled from 'styled-components';\r\nimport { UsergroupAddOutlined , UserAddOutlined, DeleteFilled, EditFilled, CloseOutlined, SearchOutlined} from '@ant-design/icons';\r\nimport { AppContext } from '../../Context/AppProvider';\r\nimport { useState } from 'react';\r\nimport '../../Search.css';\r\nconst { Panel } = Collapse;\r\n\r\nconst FormStyled = styled(Form)`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 2px 2px 2px 0;\r\n  width: 66%;\r\n  height: 35px;\r\n  margin-top: 15px;\r\n  margin-left: 15px;\r\n  border: 1px solid rgb(230, 230, 230);\r\n  border-radius: 10rem;\r\n  .ant-form-item {\r\n    flex: 1;\r\n    margin-bottom: 0;\r\n  }\r\n  \r\n  float: left;\r\n`;\r\n\r\nconst PanelStyled = styled(Panel)`\r\n  &&& {\r\n    .ant-collapse-header,\r\n    p {\r\n      color: black;\r\n      font-size: 15px;\r\n    }\r\n    .ant-collapse-content-box {\r\n      padding: 0 40px;\r\n    }\r\n    .add-room {\r\n      color: black;\r\n      font-size: 15px;\r\n      margin-left: -39px;\r\n    }\r\n    .button-delete {\r\n      float: right;\r\n      margin-top: -10px;\r\n      margin-right: 0px;\r\n      color: gray;\r\n    }\r\n    .add-friend {\r\n      color: black;\r\n      font-size: 15px;\r\n      margin-left: -39px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ButtonStyled = styled(Button)`\r\n    float: left;\r\n    margin-top: 12px;\r\n    margin-right: 5px;\r\n    border: none;\r\n    background-color: buttonface;\r\n    border-radius: 15rem;\r\n`;\r\nconst ButtonAddFriendStyled = styled(Button)`\r\n    float: left;\r\n    margin-top: 12px;\r\n    margin-right: 5px;\r\n    border: none;\r\n    background-color: buttonface;\r\n    border-radius: 15rem;\r\n`;\r\n\r\nconst LinkStyled = styled(Typography.Link)`\r\n  display: block;\r\n  margin-bottom: 1px;\r\n  color: white;\r\n  font-size: 15px;\r\n  width: 315px;\r\n  height: 50px;\r\n  margin-left: -39px;\r\n  text-align: left;\r\n  padding-top: 10px;\r\n  padding-left: 39px;\r\n`;\r\n\r\nexport default function RoomList() {\r\n  const { rooms, setIsAddRoomVisible, setSelectedRoomId, setIsAddFriendVisible} = React.useContext(AppContext);\r\n  //Search room chat\r\n  const [ filteredData, setFilteredData ] = useState([]);\r\n  const [ wordEntered, setWordEntered ] = useState('');\r\n\r\n  const handleFilter = (event) => {\r\n    const searchWord = event.target.value;\r\n    setWordEntered(searchWord);\r\n    const newFilter = rooms.filter((room) => {\r\n      return room.name.toLowerCase().includes(searchWord.toLowerCase());\r\n    });\r\n\r\n    if(searchWord == \"\"){\r\n      setFilteredData([]);\r\n    }else {\r\n      setFilteredData(newFilter);\r\n    }\r\n  };\r\n  \r\n  const clearInput = () => {\r\n    setFilteredData([]);\r\n    setWordEntered(\"\");\r\n  };\r\n\r\n  return (\r\n    <Collapse ghost defaultActiveKey={['1']}>\r\n          <FormStyled>\r\n            {\r\n              filteredData.length === 0 ? (\r\n                <Button\r\n                    icon={<SearchOutlined/>}\r\n                    type='text'\r\n                    size='large'\r\n                    >\r\n                </Button>\r\n              ) : (\r\n                <Button\r\n                  icon={<CloseOutlined />}\r\n                  type='text'\r\n                  size='large'\r\n                  onClick={clearInput}\r\n                  >\r\n                </Button>\r\n              )\r\n            }\r\n              <Input \r\n                type='text'\r\n                placeholder='Search'\r\n                value={wordEntered}\r\n                onChange={handleFilter}\r\n                bordered={false} \r\n                autoComplete=\"off\" />\r\n        </FormStyled>\r\n        {\r\n          filteredData.length != 0 && (\r\n            <div className=\"dataResult\">\r\n              {filteredData.slice(0, 10).map((room, key) => {\r\n                return (\r\n                  <a className=\"dataItem\" key={key} onClick={() => setSelectedRoomId(room.id)}>\r\n                    <p>{room.name}</p>\r\n                  </a>\r\n                );\r\n              })}\r\n            </div>\r\n          )\r\n        }\r\n        <ButtonAddFriendStyled>\r\n          <Button\r\n                type=\"text\"\r\n                size='large'\r\n                icon={<UserAddOutlined />} \r\n                className='add-friend' \r\n                onClick={() => setIsAddFriendVisible(true)}>\r\n            </Button>\r\n        </ButtonAddFriendStyled>\r\n        <ButtonStyled >\r\n          <Button\r\n              type=\"text\"\r\n              size='large'\r\n              icon={<UsergroupAddOutlined />} \r\n              className='add-room' \r\n              onClick={() => setIsAddRoomVisible(true)}>\r\n            </Button>\r\n        </ButtonStyled>\r\n              <PanelStyled header =\"List Rooms\">\r\n                {\r\n                  rooms.length >= 10 \r\n                }\r\n                {rooms.map((room, index) => (\r\n                  <LinkStyled key={room.id} onClick={() => setSelectedRoomId(room.id)}\r\n                  >\r\n                    {room.name} \r\n                  </LinkStyled> \r\n                ))}\r\n        </PanelStyled>\r\n    </Collapse>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport UserInfo from './UserInfo';\r\nimport RoomList from './RoomList';\r\nimport styled from 'styled-components';\r\n\r\nconst SidebarStyled = styled.div`\r\n    font-size: 15px;\r\n    height: 100vh;\r\n    background-color: rgb(240, 240, 240) !important;\r\n`;\r\n\r\nexport default function SideBar() {\r\n  return (\r\n      \r\n      <SidebarStyled>\r\n        <Row>\r\n            <Col span={24}>\r\n                <UserInfo />\r\n            </Col>\r\n            <Col span={24}>\r\n                <RoomList />\r\n            </Col>\r\n        </Row>\r\n      </SidebarStyled>\r\n  )\r\n}\r\n","import {Image, Avatar, Typography } from 'antd';\r\nimport styled from 'styled-components';\r\nimport React from 'react';\r\nimport { formatRelative } from 'date-fns';\r\n\r\n\r\nconst WrapperStyled = styled.div`\r\n  margin-bottom: 10px;\r\n  .author {\r\n    margin-left: 5px;\r\n    font-weight: bold;\r\n  }\r\n  .date {\r\n    margin-left: 10px;\r\n    font-size: 11px;\r\n    color: #a7a7a7;\r\n  }\r\n  .content {\r\n    margin-left: 30px;\r\n  }\r\n`;\r\n\r\nfunction formatDate(seconds) {\r\n  let formattedDate = '';\r\n\r\n  if (seconds) {\r\n    formattedDate = formatRelative(new Date(seconds * 1000), new Date());\r\n\r\n    formattedDate =\r\n      formattedDate.charAt(0).toUpperCase() + formattedDate.slice(1);\r\n  }\r\n\r\n  return formattedDate;\r\n}\r\n\r\n\r\nexport default function Message({text, type, displayName, createdAt, photoURL}) {\r\n  return (\r\n    <WrapperStyled>\r\n        <div>\r\n            <Avatar size=\"small\" src={photoURL}>\r\n              {photoURL ? '' : displayName.charArt(0)?.toUperCase()}\r\n            </Avatar>\r\n            <Typography.Text className='author'>{displayName}</Typography.Text>\r\n            <Typography.Text className='date'>{formatDate(createdAt?.seconds)}</Typography.Text>\r\n        </div>\r\n        <div>\r\n          {\r\n            type =='image' ? (\r\n              <Image\r\n                styled={{marginLeft: 10}}\r\n                width ={200}\r\n                className='image'\r\n                src={text} />\r\n            ) : (\r\n              <Typography.Text className='content'>{text}</Typography.Text>\r\n            )\r\n          }\r\n        </div>\r\n    </WrapperStyled>\r\n  )\r\n}\r\n","import React, { useContext, useState , useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport { Button, Tooltip, Avatar, Form, Input, Upload } from 'antd';\r\nimport { SearchOutlined, UsergroupAddOutlined } from '@ant-design/icons';\r\nimport Message from './Message';\r\nimport { AppContext } from '../../Context/AppProvider';\r\nimport { AuthContext } from '../../Context/AuthProvider';\r\nimport { addDocument } from '../../firebase/services';\r\nimport useFirestore from '../../hooks/useFirestore';\r\nimport { PhoneOutlined, VideoCameraAddOutlined, SendOutlined, UploadOutlined } from '@ant-design/icons';\r\nimport { Slide } from 'react-slideshow-image';\r\nimport \"react-slideshow-image/dist/styles.css\";\r\nimport firebase, { storage } from '../../firebase/config';\r\n\r\nconst HeaderStyled = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  height: 56px;\r\n  padding: 0 16px;\r\n  align-items: center;\r\n  border-bottom: 1px solid rgb(230, 230, 230);\r\n  .header {\r\n    &__info {\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n    }\r\n    &__title {\r\n      margin: 0;\r\n      font-weight: bold;\r\n      color: #0084FF;\r\n      font-size: 20px;\r\n    }\r\n    &__description {\r\n      font-size: 14px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ButtonGroupStyled = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst WrapperStyled = styled.div`\r\n  height: 100vh;\r\n  .wellcome-header {\r\n    text-align: center;\r\n    margin-top: 10%;\r\n  }\r\n  .wellcome-subtitle {\r\n    margin-left: 28%;\r\n  }\r\n  .wellcome-subtitle-2 {\r\n    margin-left: 31%;\r\n  }\r\n  .each-slide > div {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-size: cover;\r\n    height: 350px;\r\n  }\r\n  \r\n  .each-slide span {\r\n    padding: 20px;\r\n    font-size: 20px;\r\n    background: #efefef;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nconst ContentStyled = styled.div`\r\n  height: calc(100% - 56px);\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 11px;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nconst FormStyled = styled(Form)`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 2px 2px 2px 0;\r\n  border: 1px solid rgb(230, 230, 230);\r\n  border-radius: 2px;\r\n  .ant-form-item {\r\n    flex: 1;\r\n    margin-bottom: 0;\r\n  }\r\n  .upload_image {\r\n    margin-left: 150px;\r\n  }\r\n`;\r\n\r\nconst MessageListStyled = styled.div`\r\n  max-height: 100%;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst slideImages = [\r\n  {\r\n    \r\n    url: 'https://chat.zalo.me/assets/quick-message-onboard.3950179c175f636e91e3169b65d1b3e2.png',\r\n    caption: 'Slide 1'\r\n  },\r\n  {\r\n    url: 'https://chat.zalo.me/assets/inapp-welcome-screen-03.3f97d49ceecb950d95382b3d8fd4f0f1.png',\r\n    caption: 'Slide 2'\r\n  },\r\n  {\r\n    url: 'https://chat.zalo.me/assets/inapp-welcome-screen-01.469ad7daf26e0303dd0d54eb5262e795.jpg',\r\n    caption: 'Slide 3'\r\n  },\r\n  {\r\n    url: 'https://chat.zalo.me/assets/inapp-welcome-screen-04.ade93b965a968b16f2203e9d63b283a7.jpg',\r\n    caption: 'Slide 4'\r\n  },\r\n  {\r\n    url: 'https://chat.zalo.me/assets/vanish_onboard.95edcd15d875cae4d6d504d739eaa977.png',\r\n    caption: 'Slide 5'\r\n  },\r\n  {\r\n    url: 'https://chat.zalo.me/assets/inapp-welcome-screen-02.7f8cab265c34128a01a19f3bcd5f327a.jpg',\r\n    caption: 'Slide 6'\r\n  },\r\n];\r\n\r\n\r\nexport default function ChatForm() {\r\n\r\n  const { selectedRoom, members, setIsInviteMemberVisible } = useContext(AppContext);\r\n\r\n  const { user: {uid, photoURL, displayName}} = useContext(AuthContext);\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const [form] = Form.useForm ();\r\n\r\n  const [imageUpload, setImage] = useState(null);\r\n  const [url, setUrl] = useState(\"\");\r\n  const [progress, setProgress] = useState(0);\r\n\r\n  const handleUploadChange = (e) => {\r\n    if(e.target.files[0]) {\r\n      setImage(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const hanldeUploadImage = () => {\r\n    if(imageUpload == null){\r\n      return;\r\n    } else {\r\n        const uploadTask = storage.ref(`images/${imageUpload.name}`).put(imageUpload);\r\n        uploadTask.on(\r\n          \"state_changed\",\r\n          snapshot => {\r\n            const progress = Math.round(\r\n              (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n            );\r\n            setProgress(progress);\r\n          },\r\n          error => {\r\n            console.log(error);\r\n          },\r\n          () => {\r\n            //save image\r\n            storage\r\n              .ref(\"images\")\r\n              .child(imageUpload.name)\r\n              .getDownloadURL()\r\n              .then(url => {\r\n                setUrl(url);\r\n                //save message\r\n                addDocument('messages', {\r\n                  text: url,\r\n                  uid,\r\n                  type: 'image',\r\n                  photoURL,\r\n                  roomId: selectedRoom.id,\r\n                  displayName\r\n                });\r\n              });\r\n          }\r\n        );\r\n      };\r\n      setTimeout(\r\n        () => form.resetFields(['upload'])({ position: 1 }), \r\n        5000\r\n      );\r\n  };\r\n //console.log(\"image: \", imageUpload);\r\n\r\n  const handleInputChange = (e) =>{\r\n    setInputValue(e.target.value)\r\n  }\r\n\r\n  const handleOnSubmit = () =>{\r\n    if(inputValue == '') return;\r\n    addDocument('messages', {\r\n      text: inputValue,\r\n      type: 'text',\r\n      uid,\r\n      photoURL,\r\n      roomId: selectedRoom.id,\r\n      displayName\r\n    });\r\n    form.resetFields(['message']);\r\n  };\r\n\r\n//check roomId ? == current roomId\r\n\r\n  const condition = React.useMemo(\r\n    () => ({\r\n      fieldName: 'roomId',\r\n      operator: '==',\r\n      compareValue: selectedRoom.id,\r\n    }),\r\n    [selectedRoom.id]\r\n  );\r\n  const messages = useFirestore('messages', condition);\r\n\r\n  return (\r\n    <WrapperStyled>\r\n      {\r\n        selectedRoom.id ? (\r\n        <>\r\n          <HeaderStyled>\r\n        <div className='header__info'>\r\n          <p className='header__title'>{selectedRoom.name}</p>\r\n          <span className='header__description'>\r\n            {selectedRoom.description}\r\n          </span>\r\n        </div>\r\n          <ButtonGroupStyled>\r\n          <Button \r\n              type='text'\r\n              size='large'\r\n              icon={<SearchOutlined />}\r\n              //onClick={() => setIsAddFriendVisible(true)}\r\n            >  \r\n            </Button>\r\n          <Button \r\n              icon={<UsergroupAddOutlined />} \r\n              type='text'\r\n              size='large'\r\n              onClick={() => setIsInviteMemberVisible(true)}\r\n              >\r\n            </Button>\r\n            <Button \r\n              type='text'\r\n              size='large'\r\n              icon={<PhoneOutlined />}\r\n            >  \r\n            </Button>\r\n            <Button\r\n             type='text'\r\n             size='large'\r\n              icon={<VideoCameraAddOutlined />}\r\n            >  \r\n            </Button>\r\n            \r\n            <Avatar.Group size='small' maxCount={2}>\r\n              {members.map((member) => (\r\n                  <Tooltip title={member.displayName} key={member.id}>\r\n                    <Avatar src={member.photoURL}>\r\n                      {member.photoURL \r\n                        ? '' : member.displayName?.charArt(0)?.toUpperCase()}\r\n                    </Avatar>\r\n                  </Tooltip>\r\n                ))\r\n              }\r\n            </Avatar.Group>\r\n          </ButtonGroupStyled>\r\n      </HeaderStyled>\r\n      <ContentStyled>\r\n        <MessageListStyled>\r\n              {messages.map((mes) => (\r\n                <Message\r\n                  key={mes.id}\r\n                  text={ mes.text}\r\n                  type = {mes.type}\r\n                  photoURL={mes.photoURL}\r\n                  displayName={mes.displayName}\r\n                  createdAt={mes.createdAt}\r\n                />\r\n              ))}\r\n        </MessageListStyled>\r\n        <FormStyled form={form}>\r\n        <Form.Item name=\"upload\">\r\n            <Input\r\n              type='file'\r\n              onChange= {handleUploadChange}\r\n              onPressEnter={hanldeUploadImage}\r\n              name='file'\r\n              display='none'\r\n              accept='image/*'\r\n              bordered={false} \r\n              autoComplete=\"off\" />\r\n              </Form.Item>\r\n            <Button \r\n              type='primary'\r\n              size='large'\r\n              icon={<UploadOutlined />}\r\n              onClick={hanldeUploadImage}>\r\n            </Button>\r\n          </FormStyled>\r\n\r\n        <FormStyled form={form}>\r\n          <Form.Item name=\"message\"> \r\n            <Input\r\n              onChange={handleInputChange}\r\n              onPressEnter={handleOnSubmit}\r\n              placeholder='Type a message here'\r\n              bordered={false} \r\n              autoComplete=\"off\" />\r\n          </Form.Item>\r\n          <Button \r\n            icon={<SendOutlined />}\r\n            size='large'\r\n            type='primary' \r\n            onClick={handleOnSubmit}>\r\n          </Button>\r\n        </FormStyled>\r\n      </ContentStyled>\r\n        </>\r\n        ) : \r\n        <div>\r\n            <h1\r\n              className='wellcome-header'\r\n            >Wellcome to Chat App\r\n            </h1>\r\n            <br></br>\r\n            <span className='wellcome-subtitle'>Discover utilities that support working and chatting with </span><br></br>\r\n            <span className='wellcome-subtitle-2'>family and friends optimized for your computer</span>\r\n            <div className=\"slide-container\">\r\n              <Slide>\r\n              {slideImages.map((slideImage, index)=> (\r\n                  <div className=\"each-slide\" key={index}>\r\n                    <div style={{'backgroundImage': `url(${slideImage.url})`}}>\r\n                      {/* <span>{slideImage.caption}</span> */}\r\n                    </div>\r\n                  </div>\r\n                ))} \r\n              </Slide>\r\n            </div>\r\n        </div>\r\n      }\r\n    </WrapperStyled>\r\n  );\r\n}\r\n","import React, { useState, useContext } from 'react';\r\nimport { Row, Col, Button, message } from 'antd';\r\nimport styled from 'styled-components';\r\nimport { UserOutlined, SettingOutlined,LinkOutlined, FileWordOutlined, FileExcelOutlined,\r\n   EyeInvisibleOutlined,RightSquareOutlined,LoadingOutlined, DeleteOutlined} from '@ant-design/icons';\r\nimport { AppContext } from '../../Context/AppProvider';\r\nimport { AuthContext } from '../../Context/AuthProvider';\r\nimport { addDocument } from '../../firebase/services';\r\nimport useFirestore from '../../hooks/useFirestore';\r\nimport { Image } from 'antd';\r\nimport Message from './Message';\r\n\r\nconst DropDownContainer = styled(\"div\")`\r\n  margin-left: 10px;\r\n  margin-top: 30px;\r\n`;\r\nconst DropDownHeader = styled(\"div\")`\r\n  font-weight: bold;\r\n  margin-left: 30px;\r\n  .ant-collapse-content-box {\r\n    padding: 0 40px;\r\n  }\r\n`;\r\nconst DropDownListContainer = styled(\"div\")``;\r\nconst DropDownList = styled(\"ul\")``;\r\nconst ListItem = styled(\"li\")``;\r\n\r\n\r\nconst HeaderStyled = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  height: 56px;\r\n  padding: 0 16px;\r\n  align-items: center;\r\n  border-bottom: 1px solid rgb(230, 230, 230);\r\n  .header {\r\n    &__info {\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n    }\r\n    &__title {\r\n      color: #0084FF;\r\n      margin: 0;\r\n      margin-left: 80px;\r\n      font-weight: bold;\r\n      font-size: 20px;\r\n      float: right;\r\n    }\r\n    &__description {\r\n      font-size: 14px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst SidebarStyled = styled.div`\r\n    font-size: 15px;\r\n    height: 100vh;\r\n    background-color: rgb(240, 240, 240) !important;\r\n`;\r\n\r\nexport default function InforRoom({text, type, displayName, createdAt, photoURL}) {\r\n\r\n  const { selectedRoom, members } = useContext(AppContext);\r\n\r\n  //Group member\r\n  const [isOpenGroupMember, setIsOpenGroupMember] = useState(false);\r\n  const groupMember = () => setIsOpenGroupMember(!isOpenGroupMember);\r\n  //Group message board\r\n  const [isOpenGroupMemberBoard, setisOpenGroupMemberBoard] = useState(false);\r\n  const groupMessageBoard = () => setisOpenGroupMemberBoard(!isOpenGroupMemberBoard);\r\n  //PhotosVideos\r\n  const [isOpenGroupPhotosVideos, setisOpenGroupPhotosVideos] = useState(false);\r\n  const groupPhotosVideos = () => setisOpenGroupPhotosVideos(!isOpenGroupPhotosVideos);\r\n  //Files\r\n  const [isOpenFiles, setisOpenGroupFiles] = useState(false);\r\n  const groupFiles = () => setisOpenGroupFiles(!isOpenFiles);\r\n  //Links\r\n  const [isOpenLinks, setisOpenGroupLinks] = useState(false);\r\n  const groupLinks = () => setisOpenGroupLinks(!isOpenLinks);\r\n  //Security Settings\r\n  const [isOpenSetting, setIsOpenSetting] = useState(false);\r\n  const groupSercuritySetting = () => setIsOpenSetting(!isOpenSetting);\r\n\r\n  const condition = React.useMemo(\r\n    () => ({\r\n      fieldName: 'roomId',\r\n      operator: '==',\r\n      compareValue: selectedRoom.id,\r\n    }),\r\n    [selectedRoom.id]\r\n  );\r\n  const messages = useFirestore('messages', condition);\r\n\r\n  return (\r\n      <SidebarStyled>\r\n        <Row>\r\n            <Col span={24}>\r\n              <HeaderStyled>\r\n                  <div className='header__info'>\r\n                      <p className='header__title'>Room Infomation</p>\r\n                      <span className='header__description'>\r\n                      </span>\r\n                  </div>\r\n              </HeaderStyled>\r\n            {\r\n              selectedRoom.id ? (\r\n                <>\r\n                <div className='dropdown'>\r\n                  <DropDownContainer>\r\n                    <DropDownHeader\r\n                      onClick={groupMember}>Group member</DropDownHeader>\r\n                    {isOpenGroupMember && (\r\n                    <DropDownListContainer>\r\n                      <DropDownList>\r\n                          <Button \r\n                          icon={<UserOutlined />}\r\n                          type='text'\r\n                          size='large'\r\n                          >\r\n                            {members.length} Members\r\n                          </Button>\r\n                          <Button\r\n                          icon={<SettingOutlined />}\r\n                          type='text'\r\n                          size='large'\r\n                          > \r\n                            Manage, permission settings\r\n                          </Button>\r\n                      </DropDownList>\r\n                    </DropDownListContainer>\r\n                    )}\r\n                  </DropDownContainer>\r\n\r\n                  {/* <DropDownContainer>\r\n                    <DropDownHeader onClick={groupMessageBoard}>Group message board</DropDownHeader>\r\n                    {isOpenGroupMemberBoard && (\r\n                    <DropDownListContainer>\r\n                      <DropDownList>\r\n                      <Button \r\n                          icon={<ClockCircleOutlined />}\r\n                          type='text'\r\n                          size='large'\r\n                          >\r\n                            Appointment reminder list\r\n                          </Button>\r\n                        \r\n                          <Button\r\n                          icon={<PushpinOutlined />}\r\n                          type='text'\r\n                          size='large'\r\n                          > \r\n                            Note, Pin, Vote\r\n                          </Button>\r\n                      </DropDownList>\r\n                    </DropDownListContainer>\r\n                    )}\r\n                  </DropDownContainer> */}\r\n\r\n                  <DropDownContainer>\r\n                    <DropDownHeader onClick={groupPhotosVideos}>Photos/Videos</DropDownHeader>\r\n                    {isOpenGroupPhotosVideos && (\r\n                    <DropDownListContainer>\r\n                      {\r\n                        messages.filter(message => message.type == 'image').slice(0, 4).map(filteredImage => (\r\n                          <Image\r\n                            style={{marginRight: 10, padding: 5}}\r\n                            width={70}\r\n                            height={70}\r\n                            src={filteredImage.text} />\r\n                          ) \r\n                        )\r\n                      }\r\n                    </DropDownListContainer>\r\n                    )}\r\n                  </DropDownContainer>\r\n\r\n                  <DropDownContainer>\r\n                    <DropDownHeader onClick={groupFiles}>Files</DropDownHeader>\r\n                    {isOpenFiles && (\r\n                    <DropDownListContainer>\r\n                      <DropDownList>\r\n                      <Button\r\n                          icon={<FileWordOutlined />}\r\n                          type='text'\r\n                          size='large'\r\n                          > \r\n                            \r\n                          </Button>\r\n                          reactJs-community.docs\r\n                          <br></br>\r\n                          <Button\r\n                          icon={<FileExcelOutlined />}\r\n                          type='text'\r\n                          size='large'\r\n                          > \r\n                            \r\n                          </Button>\r\n                          reactJs-community.exls\r\n                      </DropDownList>\r\n                    </DropDownListContainer>\r\n                    )}\r\n                  </DropDownContainer>\r\n\r\n                  <DropDownContainer>\r\n                    <DropDownHeader onClick={groupLinks}>Links</DropDownHeader>\r\n                    {isOpenLinks && (\r\n                    <DropDownListContainer>\r\n                      <DropDownList>\r\n                      <Button\r\n                          icon={<LinkOutlined />}\r\n                          type='text'\r\n                          size='large'\r\n                          > \r\n                            \r\n                          </Button>\r\n                          https://facebook.com/truongtu\r\n                          <br></br>\r\n                          <Button\r\n                          icon={<LinkOutlined />}\r\n                          type='text'\r\n                          size='large'\r\n                          > \r\n                            \r\n                          </Button>\r\n                          https://google.com/reactjs\r\n                      </DropDownList>\r\n                    </DropDownListContainer>\r\n                    )}\r\n                  </DropDownContainer>\r\n                  <DropDownContainer>\r\n                    <DropDownHeader onClick={groupSercuritySetting}>Security settings</DropDownHeader>\r\n                    {isOpenSetting && (\r\n                    <DropDownListContainer>\r\n                      <DropDownList>\r\n                          <Button\r\n                          icon={<EyeInvisibleOutlined />}\r\n                          type='text'\r\n                          size='large'\r\n                          > \r\n                          </Button>\r\n                          Hiden chat\r\n                          <br></br>\r\n                          {/* <Button\r\n                          icon={<WarningOutlined />}\r\n                          type='text'\r\n                          size='large'\r\n                          > \r\n                          </Button>\r\n                          Report\r\n                          <br></br> */}\r\n                          <Button\r\n                          icon={<DeleteOutlined />}\r\n                          type='text'\r\n                          size='large'\r\n                          > \r\n                          </Button>\r\n                          Delete chat history\r\n                          <br></br>\r\n                          <Button\r\n                          icon={<RightSquareOutlined />}\r\n                          type='text'\r\n                          size='large'\r\n                          > \r\n                          </Button>\r\n                          Leave the group\r\n                          \r\n                      </DropDownList>\r\n                    </DropDownListContainer>\r\n                    )}\r\n                  </DropDownContainer>\r\n                </div>\r\n                </>\r\n                ) : \r\n                  <Button\r\n                      icon={<LoadingOutlined />}\r\n                      size='large'\r\n                      type='text'\r\n                      style={{margin: 10}}\r\n                    > \r\n                  </Button>\r\n            }\r\n            </Col>\r\n        </Row>\r\n      </SidebarStyled>\r\n  )\r\n}","import React from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport NavBar from './NavBar';\r\nimport SideBar from './SideBar';\r\nimport ChatForm from './ChatForm';\r\nimport RoomInfo from './RoomInfo';\r\n\r\nexport default function ChatRoom() {\r\n  return (\r\n    <Row>\r\n      <Col span={1}><NavBar /> </Col>\r\n      <Col span={5}><SideBar /> </Col>\r\n      <Col span={13}><ChatForm /> </Col>\r\n      <Col span={5}><RoomInfo /></Col>\r\n    </Row>\r\n  )\r\n};\r\n","import { Modal, Input, Form } from 'antd'\r\nimport React, { useContext } from 'react';\r\nimport { AppContext } from '../../Context/AppProvider';\r\nimport { AuthContext } from '../../Context/AuthProvider';\r\nimport { addDocument } from '../../firebase/services';\r\n\r\nexport default function AddRoomModal() {\r\n    const { isAddRoomVisible, setIsAddRoomVisible } = useContext(AppContext);\r\n    const { user: { uid }, } = useContext(AuthContext);\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const handleOk = () => {\r\n        //add new room to firestore\r\n        console.log({formData: form.getFieldValue()});\r\n        //add room to firestore attack a current user\r\n        addDocument('rooms', { ...form.getFieldsValue(), members: [uid] });\r\n        //reset form value\r\n\r\n        form.resetFields();\r\n        setIsAddRoomVisible(false);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        form.resetFields();\r\n        setIsAddRoomVisible(false);\r\n    };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        title='Create New Room'\r\n        visible={isAddRoomVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n      >\r\n        <Form form={form} layout='vertical'>\r\n          <Form.Item label='Room name' name='name'>\r\n            <Input placeholder='Enter room name ' />\r\n          </Form.Item>\r\n          <Form.Item label='Description' name='description'>\r\n            <Input.TextArea placeholder='Enter description ' />\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useContext, useState } from 'react';\r\nimport { Form, Modal, Select, Spin, Avatar } from 'antd';\r\nimport { AppContext } from '../../Context/AppProvider';\r\nimport { debounce } from 'lodash';\r\nimport { db } from '../../firebase/config';\r\n\r\nfunction DebounceSelect({\r\n  fetchOptions,\r\n  debounceTimeout = 300,\r\n  currentMembers,\r\n  ...props\r\n}) {\r\n  // Search: abcddassdfasdf\r\n\r\n  const [fetching, setFetching] = useState(false);\r\n  const [options, setOptions] = useState([]);\r\n\r\n  const debounceFetcher = React.useMemo(() => {\r\n    const loadOptions = (value) => {\r\n      setOptions([]);\r\n      setFetching(true);\r\n\r\n      fetchOptions(value, currentMembers).then((newOptions) => {\r\n        setOptions(newOptions);\r\n        setFetching(false);\r\n      });\r\n    };\r\n    \r\n\r\n    return debounce(loadOptions, debounceTimeout);\r\n  }, [debounceTimeout, fetchOptions, currentMembers]);//, curMembers\r\n\r\n//   React.useEffect(() => {\r\n//     return () => {\r\n//       // clear when unmount\r\n//       setOptions([]);\r\n//     };\r\n//   }, []);\r\n\r\n  return (\r\n    <Select\r\n      labelInValue\r\n      filterOption={false}\r\n      onSearch={debounceFetcher}\r\n      notFoundContent={fetching ? <Spin size='small' /> : null}\r\n      {...props}\r\n    >\r\n      {options.map((opt) => (\r\n        <Select.Option key={opt.value} value={opt.value} title={opt.label}>\r\n          <Avatar size='small' src={opt.photoURL}>\r\n            {opt.photoURL ? '' : opt.label?.charAt(0)?.toUpperCase()}\r\n          </Avatar>\r\n          {` ${opt.label}`}\r\n        </Select.Option>\r\n      ))}\r\n    </Select>\r\n  );\r\n}\r\n\r\nasync function fetchUserList(search, currentMembers) {\r\n  return db\r\n    .collection('users')\r\n    .where('keywords','array-contains', search?.toLowerCase())\r\n    .orderBy('displayName')\r\n    .limit(20)\r\n    .get()\r\n    .then(snapshot => {\r\n      return snapshot.docs\r\n      .map(doc =>({\r\n        label: doc.data().displayName,\r\n        value: doc.data().uid,\r\n        photoURL: doc.data().photoURL,\r\n      }))\r\n      .filter(opt => !currentMembers.includes(opt.value));\r\n    });\r\n    } \r\n\r\nexport default function InviteMemberModal() {\r\n  const {\r\n    isInviteMemberVisible,\r\n    setIsInviteMemberVisible,\r\n    selectedRoomId,\r\n    selectedRoom,\r\n  } = useContext(AppContext);\r\n  \r\n  const [value, setValue] = useState([]);\r\n  const [form] = Form.useForm();\r\n\r\n  const handleOk = () => {\r\n    // reset form value\r\n    form.resetFields();\r\n    setValue([]);\r\n\r\n    // update members in current room when user invite another user into\r\n    const roomRef = db.collection('rooms').doc(selectedRoomId);\r\n\r\n    roomRef.update({\r\n      /* keep the previous members   */\r\n       members: [...selectedRoom.members, ...value.map((val) => val.value)],\r\n     });\r\n\r\n    setIsInviteMemberVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    // reset form value\r\n    form.resetFields();\r\n    setValue([]);\r\n\r\n    setIsInviteMemberVisible(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        title='Invite members'\r\n        visible={isInviteMemberVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        destroyOnClose={true}\r\n      >\r\n        <Form form={form} layout='vertical'>\r\n          <DebounceSelect\r\n            mode='multiple'\r\n            name='search-user'\r\n            label='Members names'\r\n            value={value} // value is uid\r\n            placeholder='Enter member name'\r\n            fetchOptions={fetchUserList}\r\n            onChange={(newValue) => setValue(newValue)}\r\n            style={{ width: '100%' }}\r\n            currentMembers={selectedRoom.members}\r\n          />\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}","import './App.css';\nimport Login from './components/Login';\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\nimport ChatRoom from './components/ChatRoom';\nimport AuthProvider from './Context/AuthProvider';\nimport AppProvider from './Context/AppProvider';\nimport AddRoomModal from './components/Modals/AddRoomModal';\nimport InviteMemberModal from './components/Modals/InviteMemberModal';\nimport React from 'react';\n\n\nfunction App() {\n    return ( <\n        BrowserRouter >\n        <\n        AuthProvider >\n        <\n        AppProvider >\n        <\n        Switch >\n        <\n        Route component = { Login }\n        path = \"/login\" / >\n        <\n        Route component = { ChatRoom }\n        path = \"/\" / >\n        <\n        /Switch> <\n        AddRoomModal / >\n        <\n        InviteMemberModal / >\n        <\n        /AppProvider> <\n        /AuthProvider> <\n        /BrowserRouter>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}